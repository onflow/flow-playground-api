## Deployment
# -----------------------------------------------------------------------------
apiVersion: apps/v1
kind: Deployment
metadata:

  # This is the full name of your deployment. It must be unique
  name: flow-playground-api-v1
  namespace: flow

  # Best practice labels:
  #   app: <app-name> (the non-unique version of metadata.name)
  #   kind: [web|worker]
  #   env: [staging|production|canary|test|dev]
  #   owner: who to ask about this service
  #   version: the major version of this service (v1/v2/v1beta1)
  labels:
    app: flow-playground-api
    kind: web
    env: production
    owner: Kan
    version: v1

spec:
  replicas: 2
  selector:
    matchLabels:
      app: flow-playground-api
      env: production
      version: v1

  # Deployment strategy dictates how an update will be rolled out across the deployment
  # K8s will try to roll up to the maxSurge before taking pods offline
  # If availability is a strong concern, increase surge and decrease unavailable
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 50%
      maxUnavailable: 50%

  template:
    metadata:

      annotations:
        # Set to "false" to opt out of prometheus scrapes
        # Prometheus still needs a port called "metrics" (below) to scrape properly
        prometheus.io/scrape: "false"

        ###
        #  TODO
        #
        #. NOTE!  This deployment isn't ready to serve metrics yet, and will require
        #         an nginx Prometheus exporter.
        ###

        # Set the path to the API endpoint that exposes prometheus metrics, or leave blank for `/metrics`
        # prometheus.io/path: "/metrics"

      labels:
        app: flow-playground-api
        env: production
        owner: Kan
        version: v1
        kind: web

    spec:
      # Affinity keeps your replicas from all being scheduled to
      # nodes in the same zone. Prevents zonal failures from taking
      # down your entire service
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            podAffinityTerm:
              topologyKey: failure-domain.beta.kubernetes.io/zone
              labelSelector:
                matchLabels:
                  app: flow-playground-api
                  env: production
                  version: v1

      containers:
        - name: flow-playground-api
          image: gcr.io/dl-flow/playground-api

          # Ports exposed can be named so other resources can reference
          # them by name and not have to hard code numbers
          ports:
            - name: web
              containerPort: 8080

            # Prometheus is looking specifically for a port named 'metrics'
            # This may be the same as the above port, or different
            - name: metrics
              containerPort: 8080

          # Environment variables
          env:
            - name: ALLOWED_ORIGINS
              value: "https://play.onflow.org"

          # Readiness and Liveness probes
          readinessProbe:
            initialDelaySeconds: 1
            periodSeconds: 10
            httpGet:
              path: /ping
              port: web

          # Resource requests and constraints
          resources:
            requests:
              cpu: "10m" # 0.01 CPUs, or 1% CPU
              memory: "128Mi"
            limits:
              cpu: "100m"
              memory: "256Mi"
---
## Service
# -----------------------------------------------------------------------------
# Cluster local service (no LB)
#
# K8s docs: https://kubernetes.io/docs/concepts/services-networking/service/

apiVersion: v1
kind: Service

metadata:
  name: flow-playground-api-v1
  namespace: flow

  labels:
    app: flow-playground-api
    env: production
    owner: Kan
    version: v1

spec:
  type: ClusterIP
  selector:
    app: flow-playground-api
    env: production
    version: v1

  ports:
    - name: web
      protocol: TCP
      port: 8080
      targetPort: web # reference to the name of the port in your container config

---
## Ingress
# -----------------------------------------------------------------------------
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: flow-playground-api
  namespace: flow
  labels:
    app: flow-playground-api
    env: production
    owner: Kan
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/affinity: "cookie"
    nginx.ingress.kubernetes.io/session-cookie-name: "autoincrement"
spec:
  rules:
    - host: playground.flow.dapperlabs.com
      http:
        paths:
          - backend:
              serviceName: flow-playground-api-v1
              servicePort: web
---
## Disruption Budget
# -----------------------------------------------------------------------------
# A disruption budget stops the scheduler from accidentally nuking all your pods
# during maintenance or other cluster admin tasks. When the cluster goes to kill
# a pod, it will respect this budget
# This is NOT the same as a deployment rolling update strategy. Deployment do NOT
# consult this disruption budget when doing a deploy
# For example, if your deployment is in the middle of a rolling deploy, and there is
# only one pod running while the new one is getting ready to launch, and the cluster
# decides to do maintenance on the node running the one pod, this budget will prevent
# the pod from being deleted until one more is running.

apiVersion: policy/v1beta1
kind: PodDisruptionBudget
metadata:
  name: flow-playground-api-v1
  namespace: flow
  labels:
    app: flow-playground-api
    owner: Kan
    env: production
    version: v1
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: flow-playground-api
      env: production
      version: v1

---
## Horizontal Pod Autoscaler
# -----------------------------------------------------------------------------
# The default HPO object provided by k8s deals only with CPU, but is a decent
# starting point for autoscaling
# Min replicas should not be less than 2

apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: flow-playground-api-v1
  namespace: flow
  labels:
    app: flow-playground-api
    owner: Kan
    env: production
    version: v1
spec:
  minReplicas: 2
  maxReplicas: 8
  targetCPUUtilizationPercentage: 80
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: flow-playground-api-v1
